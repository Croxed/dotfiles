#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

info() {
  printf "\r  [ \033[00;34m..\033[0m ] %s\n" "$1"
}

user() {
  printf "\r  [ \033[0;33m??\033[0m ] %s\n" "$1"
}

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] %s\n" "$1"
}

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] %s\n" "$1"
  echo ''
  exit
}

# Verifiy if we're on bash 4 or greater
bash_compatible()
{
  if [ "${BASH_VERSINFO[0]}" -lt 4 ]; then
    return 0
  else
    return 1
  fi
}

# Fetches all dependencies from Pacfile and expands them, separating by space
get_dependencies()
{
  if [ -f "${DIR}/Pacfile" ]; then
    local file_data
    if bash_compatible; then
        IFS=$' ' read -d "" -ra file_data < "${DIR}/Pacfile"
    else
      mapfile -t file_data < "${DIR}/Pacfile"
    fi
    printf "%s " "${file_data[@]}"
  else
    printf "%s" "Could not find Pacfile in ${DIR}..."
    exit 1
  fi
}

info "Installing prerequisites..."
sudo pacman -S base-devel fakeroot jshon expac git yajl make makepkg binutils --noconfirm

# Make sure our shiny new arch is up-to-date
info "Checking for system updates..."
sudo pacman -Syu

# Create a tmp-working-dir an navigate into it
cd "$(mktempd)" || exit 1

# Install "yay" from AUR
info "Installing yay"
curl -o PKGBUILD "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=yay-bin"
makepkg PKGBUILD
sudo pacman -U yay*.tar.xz --noconfirm

# Return to latest dir
cd - || exit 1

info "Installing depedencies ..."
yay --noconfirm -S "$(get_dependencies)"

success "Done installing packages"
